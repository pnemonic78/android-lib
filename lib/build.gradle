apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

def versionMajor = Integer.parseInt(project.LIB_VERSION_MAJOR)
def versionMinor = Integer.parseInt(project.LIB_VERSION_MINOR)

android {
    compileSdkVersion androidBuildSdkVersion

    defaultConfig {
        minSdkVersion androidBuildMinSdkVersion
        targetSdkVersion androidBuildTargetSdkVersion
        versionCode versionMajor * 100 + versionMinor
        versionName versionMajor + '.' + versionMinor.toString().padLeft(2, '0')

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            consumerProguardFiles 'proguard-rules.pro'
        }
    }

    lintOptions {
        disable "LocaleFolder"
        disable "RtlHardcoded"
        disable "UnusedResources"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // Support
    api 'androidx.annotation:annotation:1.1.0'
    api "androidx.core:core:1.3.2"
    api 'androidx.core:core-ktx:1.3.2'

    // Events
    api 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'

    // Views
    api "androidx.recyclerview:recyclerview:1.1.0"
    api 'androidx.constraintlayout:constraintlayout:2.0.4'
    api 'androidx.preference:preference-ktx:1.1.1'

    // JSON
    api 'com.google.code.gson:gson:2.8.6'

    // Logging
    api 'com.jakewharton.timber:timber:4.7.1'

    // Testing
    testImplementation 'junit:junit:4.13'
    androidTestImplementation "androidx.test:core:$androidTestVersion"
    androidTestImplementation "androidx.test:rules:$androidTestVersion"
    androidTestImplementation "androidx.test:runner:$androidTestVersion"
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
}
